{
  "name": "ext_Alexis.Duval",
  "session": 5,
  "scripts": [
    [
      "#!/bin/bash\n",
      "fct() {\n",
      "var2=\"variable 2\"\n",
      "echo \"\\nDans fonction\"\n",
      "echo \"\\$1 = $1\"\n",
      "echo \"var 1 = $var1\"\n",
      "echo \"var2 = $var2\"\n",
      "echo \"fin fonction\\n\"\n"
    ],
    [
      "#!/bin/bash\n",
      "fct() {\n",
      "var2=\"variable 2\"\n",
      "echo \"\\nDans fonction\"\n",
      "echo \"\\$1 = $1\"\n",
      "echo \"var 1 = $var1\"\n",
      "echo \"var2 = $var2\"\n",
      "echo \"fin fonction\\n\"\n",
      "}\n"
    ],
    [
      "#!/bin/bash\n",
      "fct() {\n",
      "var2=\"variable 2\"\n",
      "echo \"\\nDans fonction\"\n",
      "echo \"\\$1 = $1\"\n",
      "echo \"var 1 = $var1\"\n",
      "echo \"var2 = $var2\"\n",
      "echo \"fin fonction\\n\"\n",
      "}\n",
      "var1=\"variable 1\"\n",
      "echo \"dans script principal\"\n",
      "echo \"\\$1 = $1\"\n",
      "echo \"var1 = $var1\"\n",
      "fct $var1\n",
      "echo \"var2 = $var2\"\n",
      "echo \"fin script principal\"\n"
    ],
    [
      "#!/bin/bash\n",
      "fct() {\n",
      "var2=\"variable 2\"\n",
      "echo \"\\nDans fonction\"\n",
      "echo \"\\$1 = $1\"\n",
      "echo \"var 1 = $var1\"\n",
      "echo \"var2 = $var2\"\n",
      "echo \"fin fonction\\n\"\n",
      "}\n",
      "var1=\"variable 1\"\n",
      "echo \"dans script principal\"\n",
      "echo \"\\$1 = $1\"\n",
      "echo \"var1 = $var1\"\n",
      "fct $var1\n",
      "echo \"var2 = $var2\"\n",
      "echo \"fin script principal\"\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=$((exp $1 $2 $3)) \n",
      "return res\n",
      "}\n",
      "\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=$((exp $1 $2 $3)) \n",
      "return $res\n",
      "}\n",
      "\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=$((exp $1 $2 $3)) \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`exp $1 $2 $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`exp $1 + $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`expr $1 + $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`expr $1 $2 $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`expr $1 \\$2 $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`expr $1 \\* $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`expr $1 \\* $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`expr $1 \\($2) $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`expr $1 \\$2 $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`expr $1  $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`expr $1 $2 $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "calcul() {\n",
      "res=`expr $1 $2 $3` \n",
      "return $res\n",
      "}\n",
      "calcul $1 $2 $3\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "i=1\n",
      "res=1\n",
      "while [$i -le $1]\n",
      "do\n",
      "res=$((expr $res \\* $i))\n",
      "done\n",
      "return $res\n",
      "}\n",
      "\n",
      "fact $1\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "i=1\n",
      "res=1\n",
      "while [$i -le $1]\n",
      "do\n",
      "res=$((expr $res \\* $i))\n",
      "i=$((expr $i + 1)\n",
      "done\n",
      "return $res\n",
      "}\n",
      "fact $1\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "i=1\n",
      "res=1\n",
      "while [$i -le $1]\n",
      "do\n",
      "res=$((expr $res \\* $i))\n",
      "i=$((expr $i + 1))\n",
      "done\n",
      "return $res\n",
      "}\n",
      "fact $1\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "i=1\n",
      "res=1\n",
      "while [ $i -le $1 ]\n",
      "do\n",
      "res=$((expr $res \\* $i))\n",
      "i=$((expr $i + 1))\n",
      "done\n",
      "return $res\n",
      "}\n",
      "fact $1\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "i=1\n",
      "res=1\n",
      "while [ $i -le $1 ]\n",
      "do\n",
      "res=`expr $res \\* $i`\n",
      "i=$((expr $i + 1))\n",
      "done\n",
      "return $res\n",
      "}\n",
      "fact $1\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "i=1\n",
      "res=1\n",
      "while [ $i -le $1 ]\n",
      "do\n",
      "res=`expr $res \\* $i`\n",
      "i=`expr $i + 1`\n",
      "done\n",
      "return $res\n",
      "}\n",
      "fact $1\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "i=1\n",
      "res=1\n",
      "while [ $i -le $1 ]\n",
      "do\n",
      "res=`expr $res \\* $i`\n",
      "i=`expr $i + 1`\n",
      "done\n",
      "return $res\n",
      "}\n",
      "fact $1\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "if [ $2 -ge 1 ]\n",
      "do\n",
      "inter= `expr $2 - 1`\n",
      "res=`expr $1 \\* $inter`\n",
      "fact res inter\n",
      "done\n",
      "return $res\n",
      "}\n",
      "fact $1\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "if [ $2 -ge 1 ]\n",
      "do\n",
      "inter= `expr $2 - 1`\n",
      "res=`expr $1 \\* $inter`\n",
      "fact res inter\n",
      "done\n",
      "return $res\n",
      "}\n",
      "fact $1 $2\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "if [ $2 -ge 1 ]\n",
      "do\n",
      "inter= `expr $2 - 1`\n",
      "res=`expr $1 \\* $inter`\n",
      "fact res inter\n",
      "fi\n",
      "return $res\n",
      "}\n",
      "fact $1 $2\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "if [ $2 -ge 1 ]\n",
      "do\n",
      "inter=`expr $2 - 1`\n",
      "res=`expr $1 \\* $inter`\n",
      "fact res inter\n",
      "fi\n",
      "return $res\n",
      "}\n",
      "fact $1 $2\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "if [ $2 -ge 1 ]\n",
      "do\n",
      "inter=`expr $2 - 1`\n",
      "res=`expr $1 \\* $inter`\n",
      "fact res inter\n",
      "else\n",
      "return $res\n",
      "fi\n",
      "}\n",
      "fact $1 $2\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "if [ $2 -ge 1 ]\n",
      "do\n",
      "inter=`expr $2 - 1`\n",
      "res=`expr $1 \\* $inter`\n",
      "fact res inter\n",
      "else\n",
      "return $res\n",
      "fi\n",
      "}\n",
      "fact $1 $2\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "if [ $2 -ge 1 ]\n",
      "do\n",
      "inter=`expr $2 - 1`\n",
      "res=`expr $1 \\* $inter`\n",
      "fact res inter\n",
      "else\n",
      "return $res\n",
      "fi\n",
      "}\n",
      "fact $1 $2\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "if [ $2 -ge 1 ]\n",
      "then\n",
      "inter=`expr $2 - 1`\n",
      "res=`expr $1 \\* $inter`\n",
      "fact res inter\n",
      "else\n",
      "return $res\n",
      "fi\n",
      "}\n",
      "fact $1 $2\n",
      "echo $?\n"
    ],
    [
      "#!/bin/bash\n",
      "fact() { \n",
      "if [ $2 -ge 1 ]\n",
      "then\n",
      "inter=`expr $2 - 1`\n",
      "res=`expr $1 \\* $inter`\n",
      "fact res inter\n",
      "else\n",
      "return $res\n",
      "fi\n",
      "}\n",
      "fact $1 $2\n",
      "echo $?\n"
    ]
  ],
  "commands": [
    {
      "command": "ls",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo1.sh",
      "score": 1
    },
    {
      "command": "chmod",
      "args": "tp7_exo1.sh u+rwx",
      "score": 0
    },
    {
      "command": "chmod",
      "args": "u+rwx  tp7_exo1.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo1.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "chmod",
      "args": "u+rwx tp7_exo1.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo1.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "cp",
      "args": "tp7_exo1.sh tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": " 1 +",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "1 + 2",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "",
      "score": 0
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 + 2",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 + 2",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 + 2",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 - 2",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 * 2",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 * 2",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 + 2",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 / 2",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 \\* 2",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 + 2",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 * 2",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo2.sh",
      "args": "3 * 2",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo2.sh",
      "score": 1
    },
    {
      "command": "cp",
      "args": "tp7_exo2.sh tp7_exo3.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo3.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo3.sh",
      "args": "3",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_exo3.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo3.sh",
      "args": "3",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_exo3.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo3.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo3.sh",
      "args": "3",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_exo3.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo3.sh",
      "args": "3",
      "score": 1
    },
    {
      "command": "./tp7_exo3.sh",
      "args": "4",
      "score": 1
    },
    {
      "command": "cp",
      "args": "tp7_exo3.sh tp7_exo4.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo4.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo3.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo3.sh",
      "args": "",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_exo3.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_exo3.sh 4 4",
      "score": 1
    },
    {
      "command": "./tp7_exo3.sh",
      "args": "4 4",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_exo3.sh",
      "score": 1
    },
    {
      "command": "./tp7_exo3.sh",
      "args": "4 4",
      "score": 0
    }
  ]
}