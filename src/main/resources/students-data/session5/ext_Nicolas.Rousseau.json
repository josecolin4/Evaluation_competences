{
  "name": "ext_Nicolas.Rousseau",
  "session": 5,
  "scripts": [
    [
      "#!/bin/bash\n",
      "set `ls -l`\n"
    ],
    [
      "#!/bin/bash\n",
      "set `ls -l`\n"
    ],
    [
      "#!/bin/bash\n",
      "set -- `ls -l $1`\n",
      "echo La taille est de $5\n"
    ],
    [
      "#!/bin/bash\n",
      "set -- `ls -l $1`\n",
      "echo La taille est de $5\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if $1>=5 & $1<=10 then\n",
      "echo Le chiffre est compris entre 5 et 10.\n",
      "else\n",
      "echo Le chiffre n'est pas compris entre 5 et 10.\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if $1>=5 & $1<=10 then\n",
      "echo Le chiffre est compris entre 5 et 10\n",
      "else\n",
      "echo Le chiffre n'est pas compris entre 5 et 10\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if $1>=5 & $1<=10 \n",
      "\tthen\n",
      "\t\techo Le chiffre est compris entre 5 et 10\n",
      "\telse\n",
      "\t\techo Le chiffre n'est pas compris entre 5 et 10\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ $1>=5 & $1<=10 ] \n",
      "\tthen\n",
      "\t\techo Le chiffre est compris entre 5 et 10\n",
      "\telse\n",
      "\t\techo Le chiffre n'est pas compris entre 5 et 10\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if $1>=5 & $1<=10\n",
      "\tthen\n",
      "\t\techo \"Le chiffre est compris entre 5 et 10\"\n",
      "\telse\n",
      "\t\techo \"Le chiffre n'est pas compris entre 5 et 10\"\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ $1>=5 & $1<=10 ]\n",
      "\tthen\n",
      "\t\techo \"Le chiffre est compris entre 5 et 10\"\n",
      "\telse\n",
      "\t\techo \"Le chiffre n'est pas compris entre 5 et 10\"\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ $1>=5 & $1<=10 ]\n",
      "\tthen\n",
      "\t\techo \"Le chiffre est compris entre 5 et 10\"\n",
      "\telse\n",
      "\t\techo \"Le chiffre n'est pas compris entre 5 et 10\"\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ $1>=5 ] && [ $1<=10 ]\n",
      "\tthen\n",
      "\t\techo \"Le chiffre est compris entre 5 et 10\"\n",
      "\telse\n",
      "\t\techo \"Le chiffre n'est pas compris entre 5 et 10\"\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ $1>=5 ] && [ $1<=\"10\" ]\n",
      "\tthen\n",
      "\t\techo \"Le chiffre est compris entre 5 et 10\"\n",
      "\telse\n",
      "\t\techo \"Le chiffre n'est pas compris entre 5 et 10\"\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ $1 -ge 5 ] && [ $1 -le 10 ]\n",
      "\tthen\n",
      "\t\techo \"Le chiffre est compris entre 5 et 10\"\n",
      "\telse\n",
      "\t\techo \"Le chiffre n'est pas compris entre 5 et 10\"\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ test -e $1 ] && [ test -r $1 ] && [ test -w $1 ]\n",
      "\tthen\n",
      "\t\techo Le fichier $1 existe et est accessible en lecture et \u00c3\u00a9criture\n",
      "\telse\n",
      "\t\techo Le fichier $1 n\\\u00e2\u20ac\u2122existe pas, ou n\\\u00e2\u20ac\u2122est pas accessible en lecture, ou n\\\u00e2\u20ac\u2122est pas accessible en \u00c3\u00a9criture\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -r $1 ] && [ -w $1 ]\n",
      "\tthen\n",
      "\t\techo Le fichier $1 existe et est accessible en lecture et \u00c3\u00a9criture\n",
      "\telse\n",
      "\t\techo Le fichier $1 n\\\u00e2\u20ac\u2122existe pas, ou n\\\u00e2\u20ac\u2122est pas accessible en lecture, ou n\\\u00e2\u20ac\u2122est pas accessible en \u00c3\u00a9criture\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -e $2 ]\n",
      "\tthen\n",
      "\t\techo  \n",
      "\telse\n",
      "\t\techo Erreur un des fichier n\\'existe pas ou n\\'as pas les permitions \\-r \\-w\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -e $2 ]\n",
      "\tthen\n",
      "\t\techo Souhaitez-vous concat\u00c3\u00a9ner les fichiers ? \\[OUI ou NON\\]\n",
      "\t\tread reponse\n",
      "\t\tif $reponse=\"OUI\"\n",
      "\t\t\tthen\n",
      "\t\t\t\techo $1\n",
      "\t\t\telse\n",
      "\t\tfi\n",
      "\n",
      "\n",
      "\n",
      "\telse\n",
      "\t\techo Erreur un des fichier n\\'existe pas ou n\\'as pas les permitions \\-r \\-w\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -e $2 ]\n",
      "\tthen\n",
      "\t\techo Souhaitez-vous concat\u00c3\u00a9ner les fichiers ? \\[OUI ou NON\\]\n",
      "\t\tread reponse\n",
      "\t\tif $reponse=\"OUI\"\n",
      "\t\t\tthen\n",
      "\t\t\t\tcat $1\n",
      "\t\t\t\tcat $2\n",
      "\t\t\telse\n",
      "\t\t\t\techo Vous avez r\u00c3\u00a9pondu non.\n",
      "\t\tfi\n",
      "\n",
      "\n",
      "\n",
      "\telse\n",
      "\t\techo Erreur un des fichier n\\'existe pas ou n\\'as pas les permitions \\-r \\-w\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -e $2 ]\n",
      "\tthen\n",
      "\t\techo Souhaitez-vous concat\u00c3\u00a9ner les fichiers ? \\[OUI ou NON\\]\n",
      "\t\tread reponse\n",
      "\t\tif $reponse -eq \"OUI\"\n",
      "\t\t\tthen\n",
      "\t\t\t\tcat $1\n",
      "\t\t\t\tcat $2\n",
      "\t\t\telse\n",
      "\t\t\t\techo Vous avez r\u00c3\u00a9pondu non.\n",
      "\t\tfi\n",
      "\n",
      "\n",
      "\n",
      "\telse\n",
      "\t\techo Erreur un des fichier n\\'existe pas ou n\\'as pas les permitions \\-r \\-w\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -e $2 ]\n",
      "\tthen\n",
      "\t\techo Souhaitez-vous concat\u00c3\u00a9ner les fichiers ? \\[OUI ou NON\\]\n",
      "\t\tread reponse\n",
      "\t\tif [ $reponse -eq \"OUI\" ]\n",
      "\t\t\tthen\n",
      "\t\t\t\tcat $1\n",
      "\t\t\t\tcat $2\n",
      "\t\t\telse\n",
      "\t\t\t\techo Vous avez r\u00c3\u00a9pondu non.\n",
      "\t\tfi\n",
      "\n",
      "\n",
      "\n",
      "\telse\n",
      "\t\techo Erreur un des fichier n\\'existe pas ou n\\'as pas les permitions \\-r \\-w\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -e $2 ]\n",
      "\tthen\n",
      "\t\techo Souhaitez-vous concat\u00c3\u00a9ner les fichiers ? \\[OUI ou NON\\]\n",
      "\t\tread reponse\n",
      "\t\tif [ $reponse = \"OUI\" ]\n",
      "\t\t\tthen\n",
      "\t\t\t\tcat $1\n",
      "\t\t\t\tcat $2\n",
      "\t\t\telse\n",
      "\t\t\t\techo Vous avez r\u00c3\u00a9pondu non.\n",
      "\t\tfi\n",
      "\n",
      "\n",
      "\n",
      "\telse\n",
      "\t\techo Erreur un des fichier n\\'existe pas ou n\\'as pas les permitions \\-r \\-w\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -e $2 ]\n",
      "\tthen\n",
      "\t\techo Souhaitez-vous concat\u00c3\u00a9ner les fichiers ? \\[OUI ou NON\\]\n",
      "\t\tread reponse\n",
      "\t\tif [ $reponse = \"OUI\" ]\n",
      "\t\t\tthen\n",
      "\t\t\t\tcat $1\n",
      "\t\t\t\tcat $2\n",
      "\t\t\telse\n",
      "\t\t\t\techo Vous avez r\u00c3\u00a9pondu non.\n",
      "\t\tfi\n",
      "\n",
      "\n",
      "\n",
      "\telse\n",
      "\t\techo Erreur un des fichier n\\'existe pas ou n\\'as pas les permitions \\-r \\-w\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -e $2 ]\n",
      "\tthen\n",
      "\t\techo Souhaitez-vous concat\u00c3\u00a9ner les fichiers ? \\[OUI ou NON\\]\n",
      "\t\tread reponse\n",
      "\t\tif [ $reponse = \"OUI\" ]\n",
      "\t\t\tthen\n",
      "\t\t\t\tcat $1\n",
      "\t\t\t\tcat $2\n",
      "\t\t\telse\n",
      "\t\t\t\techo Vous avez r\u00c3\u00a9pondu non.\n",
      "\t\tfi\n",
      "\n",
      "\n",
      "\n",
      "\telse\n",
      "\t\techo Erreur un des fichier n\\'existe pas ou n\\'as pas les permitions \\-r \\-w\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -r $1 ] && [ -w $1 ]\n",
      "\tthen\n",
      "\t\techo Le fichier $1 existe et est accessible en lecture et \u00c3\u00a9criture\n",
      "\telse\n",
      "\t\techo Le fichier $1 n\\\u00e2\u20ac\u2122existe pas, ou n\\\u00e2\u20ac\u2122est pas accessible en lecture, ou n\\\u00e2\u20ac\u2122est pas accessible en \u00c3\u00a9criture\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ $1 -ge 5 ] && [ $1 -le 10 ]\n",
      "\tthen\n",
      "\t\techo \"Le chiffre est compris entre 5 et 10\"\n",
      "\telse\n",
      "\t\techo \"Le chiffre n'est pas compris entre 5 et 10\"\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ $1 -ge 5 ] && [ $1 -le 10 ]\n",
      "\tthen\n",
      "\t\techo \"Le chiffre est compris entre 5 et 10\"\n",
      "\telse\n",
      "\t\techo \"Le chiffre n'est pas compris entre 5 et 10\"\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "if [ -e $1 ] && [ -e $2 ]\n",
      "\tthen\n",
      "\t\techo Souhaitez-vous concat\u00c3\u00a9ner les fichiers ? \\[OUI ou NON\\]\n",
      "\t\tread reponse\n",
      "\t\tif [ $reponse = \"OUI\" ]\n",
      "\t\t\tthen\n",
      "\t\t\t\tcat $1\n",
      "\t\t\t\tcat $2\n",
      "\t\t\telse\n",
      "\t\t\t\techo Vous avez r\u00c3\u00a9pondu non.\n",
      "\t\tfi\n",
      "\n",
      "\n",
      "\n",
      "\telse\n",
      "\t\techo Erreur un des fichier n\\'existe pas ou n\\'as pas les permitions \\-r \\-w\n",
      "fi\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "liste_commandes=\"date who pwd ls\"\n",
      "\n",
      "for commande in liste_commandes\n",
      "do\n",
      "\t$commande\n",
      "done\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "liste_commandes=\"date who pwd ls\"\n",
      "$split = $liste_commandes.split(\" \")\n",
      "\n",
      "\n",
      "for commande in liste_commandes\n",
      "do\n",
      "\t$split\n",
      "done\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "liste_commandes=('date' 'who' 'pwd' 'ls')\n",
      "\n",
      "for commande in liste_commandes\n",
      "do\n",
      "\t$commande\n",
      "done\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "liste_commandes=('date' 'who' 'pwd' 'ls')\n",
      "\n",
      "for commande in liste_commandes\n",
      "do\n",
      "\techo $commande\n",
      "done\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "liste_commandes=('date' 'who' 'pwd' 'ls')\n",
      "\n",
      "for commande in $liste_commandes\n",
      "do\n",
      "\techo $commande\n",
      "done\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "liste_commandes=('date' 'who' 'pwd' 'ls')\n",
      "\n",
      "for commande in $liste_commandes\n",
      "do\n",
      "\techo $commande\n",
      "done\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "liste_commandes=\"date who pwd ls\"\n",
      "\n",
      "for commande in $liste_commandes\n",
      "do\n",
      "\techo $commande\n",
      "done\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "liste_commandes=\"date who pwd ls\"\n",
      "\n",
      "for commande in $liste_commandes\n",
      "do\n",
      "\t`$commande`\n",
      "done\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "liste_commandes=\"date who pwd ls\"\n",
      "\n",
      "for commande in $liste_commandes\n",
      "do\n",
      "\t`$commande`\n",
      "done\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "liste_commandes=\"date who pwd ls\"\n",
      "\n",
      "for commande in $liste_commandes\n",
      "do\n",
      "\techo `$commande`\n",
      "done\n"
    ],
    [
      " #!/bin/bash\n",
      "\n",
      "liste_commandes=\"date who pwd ls\"\n",
      "\n",
      "for commande in $liste_commandes\n",
      "do\n",
      "\techo `$commande`\n",
      "done\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "arguments=\"toto titi tutu\"\n",
      "numarg=1\n",
      "for argument in $arguments\n",
      "do\n",
      "\techo Argument $numarg \\= $argument\n",
      "\t$numarg\n",
      "done\n",
      "echo il y a $numarg arguments\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "arguments=\"toto titi tutu\"\n",
      "numarg=1\n",
      "for argument in $arguments\n",
      "do\n",
      "\techo \"Argument $numarg \\= $argument\"\n",
      "\tlet \"numarg=$numarg+1\"\n",
      "done\n",
      "echo il y a $numarg arguments\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "arguments=\"toto titi tutu\"\n",
      "numarg=0\n",
      "for argument in $arguments\n",
      "do\n",
      "\tlet \"numarg=$numarg+1\"\n",
      "\techo \"Argument $numarg \\= $argument\"\n",
      "done\n",
      "echo il y a $numarg arguments\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "arguments=\"toto titi tutu\"\n",
      "numarg=0\n",
      "for argument in $arguments\n",
      "do\n",
      "\tlet \"numarg=$numarg+1\"\n",
      "\techo \"Argument $numarg = $argument\"\n",
      "done\n",
      "echo il y a $numarg arguments\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "let \"factorielcalcul = 0\"\n",
      "let \"resultat=1\"\n",
      "\n",
      "while $factorielcalcul -le $factoriel\n",
      "do\n",
      "let \"factorielcalcul + 1\"\n",
      "let \"$resultat=$resultat*$factorielcalcul\"\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "let \"factorielcalcul = 0\"\n",
      "let \"resultat=1\"\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "let \"factorielcalcul + 1\"\n",
      "let \"$resultat=$resultat*$factorielcalcul\"\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "let \"factorielcalcul = 0\"\n",
      "let \"resultat=1\"\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "let \"factorielcalcul + 1\"\n",
      "let \"$resultat = $resultat * $factorielcalcul\"\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "let \"factorielcalcul = 0\"\n",
      "let \"resultat=1\"\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "let \"factorielcalcul + 1\"\n",
      "let \"$resultat = $resultat * $factorielcalcul\"\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "factorielcalcul\n",
      "let \"resultat=1\"\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "let \"factorielcalcul + 1\"\n",
      "let \"$resultat = $resultat * $factorielcalcul\"\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "let \"factorielcalcul = 0\"\n",
      "let \"resultat=1\"\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "let \"$factorielcalcul + 1\"\n",
      "let \"$resultat = $resultat * $factorielcalcul\"\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "let \"factorielcalcul = 0\"\n",
      "let \"resultat=1\"\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "let \"$factorielcalcul = $factorielcalcul + 1\"\n",
      "let \"$resultat = $resultat * $factorielcalcul\"\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "factorielcalcul=1\n",
      "resultat\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "\n",
      "let \"$resultat = $resultat * $factorielcalcul\"\n",
      "let \"$factorielcalcul = $factorielcalcul + 1\"\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "case choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) echo `who` ;;\n",
      "\t3 ) echo `ls -l` ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) echo `who` ;;\n",
      "\t3 ) echo `ls -l` ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) echo `ls -l` ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "while [ $choix lt 1 -o $choix gt 4 ]\n",
      "do\n",
      "echo Erreur $choix n'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible :\n",
      "read $choix\n",
      "done \n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "while [ $choix lt 1 ] -o [ $choix gt 4 ]\n",
      "do\n",
      "echo Erreur $choix n'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible :\n",
      "read $choix\n",
      "done \n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "while [ $choix lt 1 ] -o [ $choix gt 4 ]\n",
      "do\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible :\n",
      "read $choix\n",
      "done \n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "while [ $choix lt 1 -o gt 4 ]\n",
      "do\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible :\n",
      "read $choix\n",
      "done \n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "while [ $choix lt 1 ] || [ $choix gt 4 ]\n",
      "do\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible :\n",
      "read $choix\n",
      "done \n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "while [ $choix -lt 1 ] || [ $choix -gt 4 ]\n",
      "do\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible :\n",
      "read $choix\n",
      "done \n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "\n",
      "while [ $choix -gt 4 ]\n",
      "do\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible :\n",
      "read $choix\n",
      "done \n",
      "\n",
      "\n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "\n",
      "while [ $choix -gt 4 ]\n",
      "do\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible :\n",
      "read $choix\n",
      "done \n",
      "\n",
      "\n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "\n",
      "while [ $choix > 4 ]\n",
      "do\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible :\n",
      "read $choix\n",
      "done \n",
      "\n",
      "\n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "\n",
      "while [ $choix -gt 4 ]\n",
      "do\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible\n",
      "read $choix\n",
      "done \n",
      "\n",
      "\n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "\n",
      "while [ $choix -gt 4 ]\n",
      "do\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible\n",
      "read choix\n",
      "done \n",
      "\n",
      "\n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "\n",
      "while [ $choix -gt 4 ]\n",
      "do\n",
      "echo ----------------------------\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible : read choix\n",
      "echo ----------------------------\n",
      "done \n",
      "\n",
      "\n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "echo ----------------------------\n",
      "echo Liste des commandes disponnibles :\n",
      "echo 1 - Date du jour\n",
      "echo 2 - Liste des personnes connect\u00c3\u00a9es sur la machine\n",
      "echo 3 - Liste des fichiers du r\u00c3\u00a9pertoire courant\n",
      "echo 4 - Nom du r\u00c3\u00a9pertoire courant\n",
      "echo Faites votre choix :\n",
      "read choix\n",
      "\n",
      "\n",
      "while [ $choix -lt 1 ] || [ $choix -gt 4 ]\n",
      "do\n",
      "echo ----------------------------\n",
      "echo Erreur $choix n\\'est pas dans les proposition.\n",
      "echo veuillez indiquez a nouveau un choix possible : \n",
      "read choix\n",
      "echo ----------------------------\n",
      "done \n",
      "\n",
      "\n",
      "\n",
      "echo ----------------------------\n",
      "case $choix in\n",
      "\t1 ) echo `date` ;;\n",
      "\t2 ) who ;;\n",
      "\t3 ) ls -l ;;\n",
      "\t4 ) echo `pwd` ;;\n",
      "esac\n",
      "echo ----------------------------\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "factorielcalcul=1\n",
      "resultat\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "\n",
      "let \"$resultat = $resultat * $factorielcalcul\"\n",
      "let \"$factorielcalcul = $factorielcalcul + 1\"\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "factorielcalcul=1\n",
      "resultat\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "\n",
      "expr $resultat = $resultat * $factorielcalcul\n",
      "expr $factorielcalcul = $factorielcalcul + 1\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "factorielcalcul=1\n",
      "resultat\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "\n",
      "$resultat = $(($resultat * $factorielcalcul))\n",
      "$factorielcalcul = $(($factorielcalcul + 1))\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "factorielcalcul=1\n",
      "resultat\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "\n",
      "$resultat = $(($resultat * $factorielcalcul))\n",
      "$factorielcalcul = $(($factorielcalcul + 1))\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "factorielcalcul=1\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "\n",
      "resultat = $(($resultat * $factorielcalcul))\n",
      "$factorielcalcul = $(($factorielcalcul + 1))\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "factorielcalcul=1\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "\n",
      "resultat = $(($resultat*$factorielcalcul))\n",
      "$factorielcalcul = $(($factorielcalcul + 1))\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "\n",
      "factorielcalcul = $(($factorielcalcul + 1))\n",
      "resultat = $(($resultat * $factorielcalcul))\n",
      "\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "factorielcalcul=0\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "\n",
      "factorielcalcul = $(($factorielcalcul + 1))\n",
      "resultat = $(($resultat * $factorielcalcul))\n",
      "\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "echo Quel nombre souhaitez-vous factoriser ?\n",
      "read factoriel\n",
      "\n",
      "factorielcalcul=1\n",
      "resultat=1\n",
      "\n",
      "while [ $factorielcalcul -le $factoriel ]\n",
      "do\n",
      "\n",
      "resultat = $(($resultat * $factorielcalcul))\n",
      "factorielcalcul = $(($factorielcalcul + 1))\n",
      "\n",
      "done\n",
      "\n",
      "echo \"Le r\u00c3\u00a9sultat de la factoriel de $factoriel est $resultat\"\n"
    ]
  ],
  "commands": [
    {
      "command": "ls",
      "args": "-l",
      "score": 1
    },
    {
      "command": "rm",
      "args": "=5",
      "score": 1
    },
    {
      "command": "ls",
      "args": "-l",
      "score": 1
    },
    {
      "command": "./tp6_exo5.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "ls",
      "args": "-l",
      "score": 1
    },
    {
      "command": "touch",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "ls",
      "args": "-l",
      "score": 1
    },
    {
      "command": "chmod",
      "args": "u+x tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "ls",
      "args": "-l",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo6.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "ls",
      "args": "-l",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo6.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "ls",
      "args": "-l",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "touch",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "chmod",
      "args": "u+x tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "who",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "clear",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "ls",
      "args": "-l",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "ls",
      "args": "-l",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo7.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo7.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "ls",
      "args": "-l",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo6.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo6.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo6.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo6.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo6.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "./tp6_exo6.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo6.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo6.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo3.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp6_exo5.sh",
      "score": 1
    },
    {
      "command": "./tp6_exo5.sh",
      "args": "",
      "score": 1
    }
  ]
}