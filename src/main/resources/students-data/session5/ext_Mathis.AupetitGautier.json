{
  "name": "ext_Mathis.AupetitGautier",
  "session": 5,
  "scripts": [
    [
      "#!/bin/sh\n",
      "\n",
      "fct(){\n",
      "   var2=\"variable 2\"\n",
      "   echo \"\\nDans fonction\"\n",
      "   echo \"\\$1 = $1\"\n",
      "   echo \"var1 = $var1\"\n",
      "   echo \"var2 = $var2\"\n",
      "   echo \"fin fonction\\n\"\n",
      "}\n",
      "\n",
      "var1=\"variable 1\"\n",
      "echo \"dans script principal\"\n",
      "echo \"\\$1 = $1\"\n",
      "echo \"var1 = $var1\"\n",
      "fct $var1\n",
      "echo \"var2 = $var2\"\n",
      "echo \"fin script principal\"\n"
    ],
    [
      "#!bin/sh\n",
      "\n",
      "function cacul() {\n",
      "\n",
      "    return expr $1 $2 $3\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "cacul $1 $2 $ 3\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "function cacul() {\n",
      "\n",
      "    return expr $1 $2 $3\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "cacul $1 $2 $ 3\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "cacul() {\n",
      "\n",
      "    return expr $1 $2 $3\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "cacul $1 $2 $ 3\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "cacul() {\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "cacul $1 $2 $3\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "cacul() {\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "echo $(cacul $1 $2 $3)\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "cacul() {\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "echo $(cacul $1 $2 $3)\n",
      "\n",
      "expr $1 $2 $3\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "calcul() {\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "echo $(calcul $1 $2 $3)\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "calcul() {\n",
      "\n",
      "    return expr $1 $2 $3\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "echo $(calcul $1 $2 $3)\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "calcul() {\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "echo $(calcul $1 $2 $3)\n"
    ],
    [
      "#!/bin/bash\n",
      "\n",
      "calcul() {\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "echo $(calcul $1 $2 $3)\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "calcul() {\n",
      "\n",
      "    echo $(expr $1 $2 $3)\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "echo $(calcul $1 $2 $3)\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "calcul() {\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "echo calcul $1 $2 $3\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "calcul() {\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "\n",
      "c=$(calcul $1 $2 $3)\n",
      "\n",
      "echo $c\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "calcul() {\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "\n",
      "calcul $1 $2 $3 | echo\n",
      "\n",
      "echo $c\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "calcul() {\n",
      "\n",
      "    return $(expr $1 $2 $3)\n",
      "\n",
      "}\n",
      "\n",
      "\n",
      "\n",
      "calcul $1 $2 $3\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ] then\n",
      "\t\t$2=$1\n",
      "\tfi\n",
      "\n",
      "\tif [ $1 -gt 0 ] then\n",
      "\n",
      "\t\t$2=$(expr $2 \\* $1)\n",
      "\t\tfactorielle $(expr $1 - 1) $2\n",
      "\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\t$2=$1\n",
      "\tfi\n",
      "\n",
      "\tif [ $1 -gt 0 ]\n",
      "        then\n",
      "\n",
      "\t\t$2=$(expr $2 \\* $1)\n",
      "\t\tfactorielle $(expr $1 - 1) $2\n",
      "\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\t$2=$1\n",
      "\tfi\n",
      "\n",
      "\tif [ $1 -gt 0 ]\n",
      "        then\n",
      "\n",
      "             $2=$(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\t$2=$1\n",
      "\tfi\n",
      "\n",
      "\tif [ $1 -gt 0 ]\n",
      "        then\n",
      "\n",
      "              $2=$(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\t2=$1\n",
      "\tfi\n",
      "\n",
      "\tif [ $1 -gt 0 ]\n",
      "        then\n",
      "\n",
      "              2=$(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\tif [ $1 -gt 0 ]\n",
      "        then\n",
      "\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\tif [ $1 -gt 0 ]\n",
      "        then\n",
      "\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\techo $1\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\techo $1\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\t\techo $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              echo $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\tfi\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              echo $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\tfi\n",
      "\n",
      "\treturn $2\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              echo $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $(expr $1 - 1) $2\n",
      "\tfi\n",
      "\n",
      "\treturn $2\n",
      "\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              echo $2\n",
      "              set $(expr $2 - 1) $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "\tfi\n",
      "\n",
      "        return $2\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              echo $2\n",
      "              set $(expr $1 - 1) $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "\tfi\n",
      "\n",
      "        return $2\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              echo $2\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "\tfi\n",
      "\n",
      "        return $2\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "\tfi\n",
      "\n",
      "\techo $2\n",
      "\n",
      "        return $2\n",
      "\n",
      "}\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "\tfi\n",
      "\n",
      "\techo $2\n",
      "\n",
      "\tif [ $1 == $base ]\n",
      "        then\n",
      "\n",
      "        return $2\n",
      "\tfi\n",
      "}\n",
      "\n",
      "base=$1\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "\tfi\n",
      "\n",
      "\techo $2\n",
      "\n",
      "\tif [ $1 -eq $base ]\n",
      "        then\n",
      "        return $2\n",
      "\tfi\n",
      "}\n",
      "\n",
      "base=$1\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "\tfi\n",
      "\n",
      "\techo $2\n",
      "        echo $1\n",
      "\n",
      "\tif [ $1 -eq $base ]\n",
      "        then\n",
      "        return $2\n",
      "\tfi\n",
      "}\n",
      "\n",
      "base=$1\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "\tfi\n",
      "\n",
      "\techo $2\n",
      "        echo $1\n",
      "\n",
      "\tif [ $1 -eq 1 ]\n",
      "        then\n",
      "        return $2\n",
      "\tfi\n",
      "}\n",
      "\n",
      "base=$1\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "              set $1 $?\n",
      "\tfi\n",
      "\n",
      "\techo $2\n",
      "        echo $1\n",
      "\n",
      "\tif [ $1 -eq 1 ]\n",
      "        then\n",
      "        return $2\n",
      "\tfi\n",
      "}\n",
      "\n",
      "base=$1\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "              set $1 $?\n",
      "\tfi\n",
      "\n",
      "\techo $2\n",
      "        echo $1\n",
      "\n",
      "\tif [ $1 -eq 1 ]\n",
      "        then\n",
      "        echo return\n",
      "        return $2\n",
      "\tfi\n",
      "}\n",
      "\n",
      "base=$1\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $?\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "              set $1 $?\n",
      "\tfi\n",
      "\n",
      "\techo $2\n",
      "        echo $1\n",
      "\n",
      "\tif [ $1 -eq 1 ]\n",
      "        then\n",
      "        echo return\n",
      "        c=$2\n",
      "\tfi\n",
      "}\n",
      "\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $c\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "              set $1 $?\n",
      "\tfi\n",
      "\n",
      "\techo $2\n",
      "        echo $1\n",
      "\n",
      "\tif [ $1 -eq 1 ] && [ -n $2 -eq 0 ]\n",
      "        then\n",
      "        echo return\n",
      "        c=$2\n",
      "\tfi\n",
      "}\n",
      "\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $c\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "factorielle() {\n",
      "\n",
      "\tif [ -z $2 ]\n",
      "        then\n",
      "\t\tset $1 $1\n",
      "\tfi\n",
      "\n",
      "\n",
      "\tif [ $1 -gt 1 ]\n",
      "        then\n",
      "              set $(expr $1 - 1) $2\n",
      "              set $1 $(expr $2 \\* $1)\n",
      "              factorielle $1 $2\n",
      "              set $1 $?\n",
      "\tfi\n",
      "\n",
      "\techo $2\n",
      "        echo $1\n",
      "\n",
      "\tif [ $1 -eq 1 ] && [ ! $2 -eq 0 ]\n",
      "        then\n",
      "        echo return\n",
      "        c=$2\n",
      "\tfi\n",
      "}\n",
      "\n",
      "\n",
      "factorielle $1\n",
      "\n",
      "echo $c\n"
    ],
    [
      "#!/bin/sh\n",
      "\n",
      "\n",
      "if [ -z $2 ]\n",
      "then\n",
      "  set $1 $1\n",
      "fi\n",
      "\n",
      "if [ $1 -eq 1 ]\n",
      "then\n",
      "  echo \"Resultat\"\n",
      "  echo $2\n",
      "else\n",
      "$0 $(expr $1 - 1) $2\n",
      "fi\n"
    ]
  ],
  "commands": [
    {
      "command": "nano",
      "args": "tp7_ex1.sh",
      "score": 1
    },
    {
      "command": "chmod",
      "args": "u+x tp7_ex1.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex1.sh",
      "args": "",
      "score": 1
    },
    {
      "command": "eval",
      "args": "--help",
      "score": 0
    },
    {
      "command": "eval",
      "args": "3 + 2",
      "score": 0
    },
    {
      "command": "man",
      "args": "eval",
      "score": 0
    },
    {
      "command": "expr",
      "args": "3 + 2",
      "score": 1
    },
    {
      "command": "expr",
      "args": "3 / 2",
      "score": 1
    },
    {
      "command": "expr",
      "args": "3 \\* 2",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "chmod",
      "args": "u+x ./tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + T",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex2.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + T",
      "score": 1
    },
    {
      "command": "./tp7_ex2.sh",
      "args": "2 + 3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "chmod",
      "args": "u+x ./tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 0
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "2=55",
      "args": "",
      "score": 0
    },
    {
      "command": "tt=3",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "who",
      "args": "",
      "score": 1
    },
    {
      "command": "ls",
      "args": "",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "F",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.s",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "3",
      "score": 1
    },
    {
      "command": "echo",
      "args": "$?",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "3",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex3.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex3.sh",
      "args": "3",
      "score": 1
    },
    {
      "command": "ls",
      "args": "",
      "score": 1
    },
    {
      "command": "ls",
      "args": "-ls",
      "score": 1
    },
    {
      "command": "nano",
      "args": "tp7_ex4.sh",
      "score": 1
    },
    {
      "command": "chmod",
      "args": "u+x tp7_ex4.sh",
      "score": 1
    },
    {
      "command": "./tp7_ex4.sh",
      "args": "5",
      "score": 1
    },
    {
      "command": "chmod",
      "args": "u+x tp7_ex4.sh",
      "score": 1
    }
  ]
}